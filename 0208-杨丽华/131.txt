class Solution {
    List<List<String>> ans=new ArrayList<>();
    
    public List<List<String>> partition(String s) {
     
    
         dfs(0,s,new ArrayList<>());
        
        return ans;
    }
    private void dfs(int n,String s,List<String> res)
    {
        if(n==s.length())
        {
             ans.add(new ArrayList<>(res));
             return;
        }
       
        for(int i=n;i<s.length();i++)
        {
            String ss=s.substring(n,i+1);
          if( ishui(ss))
         { res.add(ss);
           dfs(i+1,s,res);
           res.remove(res.size()-1);
        }}
    }
    private boolean ishui(String ss)
    {
        for(int i=0,j=ss.length()-1;i<j;i++,j--)
        {
            if(ss.charAt(i)!=ss.charAt(j)) return false;
        }
        return true;
    }
}